/*
 ROOT build.gradle file:
 */

plugins {
    /*
    Buraya yazılan özellikler alttaki tüm microservislerde yazılmasa bile etkili olacaktır.
     */
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'application'
    id 'java-library'
}

allprojects {
    /*
    tüm projelerde (root+sub) gerekli ayarları belirlemek için:
     */
    apply from: "${rootDir}/dependencies.gradle"
    apply plugin: 'application'
    group = 'org.tolga'
    version = 'v0.1'
    sourceCompatibility = JavaVersion.VERSION_19
}

allprojects {
    buildscript {
        repositories {
            mavenCentral()
        }
    }

    repositories {
        mavenCentral()
    }
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    dependencies {
        /*
        Bütün projeye yayılacak bağımlılıkları buraya yazıyoruz.
        Yazarken Dependencies.gradle dosyasındaki libs içindekileri çekeceğiz.
         */
        implementation libs.springBootWeb
        // implementation libs.springCloudOpenFeign
        implementation libs.springBootValidation
        //  implementation libs.springCloudConfigClient

        implementation libs.springBootDataJpa
        implementation libs.springBootamqp
        compileOnly libs.lombok
        annotationProcessor libs.lombok

        implementation libs.mapstruct
        annotationProcessor libs.mapstructProcessor

        implementation libs.swagger
        implementation libs.jwt

        implementation libs.springActuator
        implementation libs.postgres
        
    }
}

subprojects {
    /*
    sadece sub projelerde gerekli ayarları belirlemek için:
     */
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    buildscript {
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}")
        }
    }


    tasks.named('bootBuildImage') {
        builder = 'paketobuildpacks/builder-jammy-base:latest'
    }

    tasks.withType(JavaCompile).configureEach{
        options.encoding='UTF-8'}
}